<%= inline(this,:'_monitor') %>
<% if false %>
<style>
@media screen and (min-width: 1024px) {
    .mobile {
        display: none !important;
    }
}
</style>
<div class="mobile row" style="padding:10px;background:#111;color:#fff">
<div id="" class="col-4" style="font-size:1em;color:#ddd"> 
<center>
<%=Time.now.strftime("%d/%m/%Y")%><br/>
<%=Time.now.strftime("%H:%M:%S")%>
</center>
</div>
<div id="" class="col-6" style=""> 

<input type="text" id="search-mobile" name="search" placeholder="Search" style="padding:10px;width:100%;background:#ddd">

</div>
<div class="col-2">
	<center><%=link_to "+", "../Admit/create",:class=>'btn btn-success', :style=>'padding:10px;width:100%' %></center>
</div>

</div>
<script>
$(document).ready(function(){
	
	$('#search-mobile').focus();

	
})
<% end %>

</script>




<div id="panel" class="row" style="border:0px solid blue;background:#111;color:#fff;">

<% 	  

	  @current_zone = Zone.find session[:current_zone] if session[:current_zone]
	  @current_zone = Zone.first unless @current_zone
		
	  admits = @current_zone.admits.where(:status=>'Admitted').all
	 # admits =  Admit.where(:status=>'Admitted').all
	  
	  
	  stations = Station.find(admits.collect{|i| i.station_id})
	  
	  

      for admit in admits
		  
		  
		station = admit.station
	
		# station = Station.where(:name=>i).first
		
		# if station
		 
		 
		# admit = station.admits.last
	#
	# 	admit = nil if admit and admit.status=='Discharged'
		 
		id = admit.id
		
		
		title = '-'
		
		title = station.title if station and  station.title and station.title.size>0 

		station_id = title
		
		
		
%>
<div id="<%=station_id%>" admit="<%=id%>" class=" col-lg-6 col-xl-3  active-station " style="border-right:1px solid #888">
	<div class="row" style="background:#666">
		
		<div class="col-2 text-left ">
		<%= link_to title,"../Admit/show?id=#{admit.id}",:class=>'btn'%>
		</div>
		<div class="col-7 text-center">
			<%
			
			if admit
				patient = admit.patient
			
			%>
			<%= link_to "#{patient} (#{patient.hn})","../Admit/show?id=#{admit.id}", :class=>'btn'  %>
			<% end %> 	
	
		</div>
		<div class="col-3">
			
		<%= link_to "","../Station/show?id=#{station.id}",:class=>'btn hn' if station%>
		
		</div>
		
			
	</div>
	<div  class=" station row align-items-start">
		<div class="col-lg-12 order-lg-3 order-3">
			<div class="row">
					<div class="col-8" style="border:0px solid">
						<div class="row">
						<div class="col-6 col-lg-2 col-sm-3 pr">
							<span class="label">PR</span>
							<div class="value">-</div>
						</div>
						<div class="col-6 col-lg-4 col-sm-3  bp">
							<span class="label">BP</span>
							<div class="value">-</div>
						</div>
			
							<div class="col-6 col-lg-2 col-sm-3  temp">
								<span class="label">Temp</span>
								<div class="value">-</div>
							</div>
							<div class="col-6 col-lg-2 col-sm-3  rr">
								<span class="label">RR</span>
								<div class="value">-</div>
							</div>
			
						<div class="col-6 col-lg-2 col-sm-3  spo2">
							<span class="label">SpO2</span>
							<div class="value">-</div>
						</div>
						
					<div class="col-6 col-lg-2 col-sm-3  hr">
						<span class="label">HR</span>
						<div class="value">-</div>
					</div>			
		
						<div class="col-6 col-lg-2 col-sm-3  co2">
						    <span class="label">CO<sub>2</sub></span>
							<div class="value">-</div> 
						</div>
						<!-- <div class="col-6  col-lg-2 col-sm-3 uc">
							<span class="label">UO</span>
							<div class="value">-</div>
						</div> -->
					 
					</div>
					</div>
					<div class="col-4 score  " >
						<div class="row">
							<div class="col-12 note-panel-<%=station_id%>" style="font-size:2.5em;  border-radius: 5px;">
								<div class="value">-</div>
								</div>
					</div></div>
			</div>
		</div>
		<div class="col-lg-4 order-lg-3 order-3 " style="border:1px solid #333;border-radius: 5px;">
	
			<div class="row text-center">
					
					<%#link_to "Quick","\#",:id=>admit.id, :class=>'btn', :style=>'' if admit %>
					<%
					if admit
						patient = admit.patient
					%>
					<script>
					$('#<%=admit.id%>').click(function(){
						call_submit($(this).attr("id"))
					});
					</script>
					
					<%#link_to "Discharge","../Admit/discharge?id=#{admit.id}",:class=>'btn btn-danger col-4 col-lg-12', :style=>''%>
					<%#link_to "Detail","../Admit/show?id=#{admit.id}", :class=>'btn btn-primary col-8 col-lg-12' , :style=>'' if admit %>
					
					<% end %>
			</div>
		</div>
		
		<div id="wave-<%=station_id%>" class="col-lg-12  order-1" style="min-height:5em;background:#111">
		
		</div>
		
		<div  class="note-spanel-<%=station_id%> col-12 col-lg-12 order-lg-3 order-3" style="border:1px solid #333;border-radius: 5px;background:none">
		<%
		
		notes = admit.nurse_records
		
		
		if notes and notes.size>0
			note = notes[-1]
		
		%>
		 
		   <span class="label">Note : (<%=note.start_time.localtime.strftime("%H:%M:%S")%>) </span>
		   
		<div class="value" style="color:#fff;">
			
			<%=note.description%>
			
		</div>
		   
		
		
		<% end %>
		
		</div>
		
	</div>

</div>
<% end %>

<div id="<%=station_id%>" admit="<%=id%>" class=" col-lg-6 col-xl-3  active-station " style="border-right:1px solid #888;padding-top:50px">
<center><%=link_to "+Admit", "../Admit/create",:class=>'btn btn-success' %></center>
</div>

</div>
<script>
$('#main-container').removeClass('container')
</script>



	<div id="panel" class="panel" style="border:0px solid blue">
		<div class="clear"></div>
	</div>
	
		<div id="template" class="station" style="display:none">
				<div class="row">
					<!-- <div class="col-sm-1">
						<div class="row">
							<div class="col-sm-12 ctlx">
								P
							</div>
						</div>
						<div class="row">
							<div class="col-sm-12 ctlx">
								M
							</div>
						</div>
						<div class="row">
							<div class="col-sm-12 ctlx">
								S
							</div>
						</div>
					</div> -->
					<div class="col-sm-12">
						<div class="row">
						<div class="col-sm-6 boxx"><span class="pr-label x-label" >PR</span><span class="pr" >-</span></div>
						<div class="col-sm-6 boxx"><span class="bp-label x-label" >BP</span><span class="bp">-/-</span></div>
						<div class="col-sm-6 boxx"><span class="spo2-label x-label" >SpO<sub>2</sub></span><span class="spo2">-</span></div>
						<div class="col-sm-6 boxx"><span class="rr-label x-label" >RR</span><span class="rr">-</span></div>
						<div class="col-sm-6 boxx"><span class="co2-label x-label" >CO<sub>2</sub></span><span class="co2" >-</span></div>
						
						<!-- <div class="col-sm-6 boxx"><span class="uc-label x-label" >UC</span><span class="uc">-</span></div> -->
						</div>

					</div>
					<!-- <div class="col-sm-3 pid"  >
							<div class="row">
							<div class="col-sm-12" style="font-size:0.8em"><span class="id  "><%=station_id%></span></div>
							</div>
							<div class="row">
							<div class="col-sm-12" style="font-size:0.8em"><span class="hn  "><%=station_id%></span></div>
							</div>
							<div class="row">
							<div class="col-sm-12 " ><span class="sos">10</span></div>
							</div>
							<div class="row">
							<div class="col-sm-12">
							<canvas class="plot" id="plot-<%=station_id%>"  style="border:1px solid #000000;background:#ccc;height:100%;width:100%;display:none">
							</canvas>
							</div></div>
					</div> -->

				</div>
				<div class="row">
						<span class="col-sm-12 msg"></span>	
				</div>

		
		</div> 
	

		<script type="text/javascript">
	    

			$(document).ready(function(){
				
				
					
			function genData(data){
			
				scale = 50;
			
				for(var i=0;i<20;i++){
					r = Math.random();
					v = Math.sin(360/20*i*Math.PI/180)*(scale*r)+50;
					data.push(v);
				}
			
			}
	    
	
			function aniLine(idx, sampling, rawdata, last){
	
			var w = 70;
		    var h = 80;
			var svg;
			
			// console.log(""+idx+" "+rawdata.length)

		    svg = d3.select("#"+idx)
		      .append("svg")
		      .attr("width", w)
		      .attr("height", h)
		      .attr("id", "visualization");

	    
			// svgo.selectAll("path.old").remove();
			// svgo.selectAll("path").attr("class", "old");


		 var x = d3.scaleLinear().domain([0, sampling]).range([0, w]);
		    var y = d3.scaleLinear().domain([1000,-500]).range([10, h - 10]);

		    var line = d3.line()
		      .x(function(d,i) {return x(i);})
		      .y(function(d) {return y(d);})
		      .curve(d3.curveNatural)
		 

		    // data is created inside the function so it is always unique
		    let repeat = () => {
		      var data = rawdata //d3.range(101).map(function(){return Math.random()*100})

		      // Uncomment following line to clear the previously drawn line
		      //svg.selectAll("path").remove();

		      // Set a light grey class on old paths
	     
		      svg.selectAll("path").remove();
		      // var last_path = svg.append("path")
		      // 		      .attr("d", line(last))
		      // 		      .attr("stroke", "#131")
		      // 		      .attr("stroke-width", "2")
		      // 		      .attr("fill", "none")
		      // 		      .attr("class", "old");
		      // 		      last_path.add

		      var path = svg.append("path")
		        .attr("d", line(data))
		        .attr("stroke", "green")
		        .attr("stroke-width", "1")
		        .attr("fill", "none");

		      var totalLength = path.node().getTotalLength();

		      path
		        .attr("stroke-dasharray", totalLength + " " + totalLength)
		        .attr("stroke-dashoffset", totalLength)
		        .transition()
		          .duration(1000)
		          .ease(d3.easeLinear)
		          .attr("stroke-dashoffset", 0)
		          // .on("end", repeat);
		    };
		    repeat();
			}
		
			// aniLine('line1')
			// aniLine('line2')
			// aniLine('line3')
			// aniLine('line4')
	
		
		
			function showWave(div,data,id){
			var n = 200; // sample for a second
		    var cut = 1;
			var show = 8; //second
			var second = 0;
			var lastdata = [];
		
			var intervalID = setInterval(function(){
				
				
				if(second%show==show-1){
					
					$('#'+div).html("");
					
				}
			
					// genData(data);
					if(second%cut==cut-1&&second<1000){
					
						rawdata = wave_data[id].splice(0,cut*n+1);
						// data.unshift(rawdata[rawdata.length-1]);
						if(rawdata.length>0){
						
							aniLine(div,n ,rawdata,lastdata);
							lastdata = rawdata;
						}
						// second = 0 ;
					}
					
					second+=1;
			}, 1000);
		
		
		   }
		   
   
   
		   // var wave_data = [];
		   var wave_data = {};

		<% for i in stations.collect{|i| i.name}.sort %>
		   
		   i = "<%=i%>"
		   
		   wave_data[i] = [];
	
		  showWave('wave-<%=i%>',wave_data[i],i);
		
	    <% end %>
	
	
			// showWave('line2',[]);
			// showWave('line3',[]);
			// showWave('line4',[]);
			//
		
		
		
		

	
	var show = function(el){
        return function(msg){ el.innerHTML = msg  }
      }(document.getElementById('msgs'));

	
	  var ws       = new WebSocket('wss://' + window.location.host + window.location.pathname);
	
	  var plot_pos = {};
	
      ws.onopen    = function()  { show('websocket opened'); 

	  	ws.send('WS.Select name=<%=session.id%>\n["Zone <%="miot/#{settings.name}/z/#{@current_zone.name}"%>","ZoneUpdate zone_id=*","Alert station_id=*","Data.Image station_id=*"]')

	  };
      ws.onclose   = function()  { show('websocket closed'); 
		
	 	setTimeout(function () {
	       window.location.href = "index"; //will redirect to your blog page (an ex: blog.html)
	    }, 2000); //will call the function after 2 secs.
	

      }
      ws.onmessage = function(m) { 
	
		active = $('.active-station').size()
	
		// show(''+m.data)
		
		lines = m.data.split("\n")
		
		// console.log(lines[0].split(" ")[0])
		if(lines[0].split(" ")[0]=='Alert'){
			data = JSON.parse(lines[1])
			
			// alert(data['alert'])
			
			$('#'+data['station']).addClass('bp_alert_2');
			$('#'+data['station']+' .msg').html(data['alert']);
			
			// play sound
			ion.sound.play("bell_ring");
			
		}else
		if(lines[0].split(" ")[0]=='Data.Image'){
		
			lines.shift()
			img = lines.join("")
			// alert('image '+m.data.length)
			
			$("#image").attr('src','data:image/jpg;base64,'+ JSON.parse(img))
			
			
		}
		else
		if(lines[0].split(" ")[0]=='ZoneUpdate'){
		// console.log(lines)
	
		data = JSON.parse(lines[1])
	
		if(data['list'].length!=active){
			// window.location.href = "index";
			console.log(data['list'])
			console.log('active '+active);
		}
			
		$('#timer').html(data['time'])
		for(var id in data['list']){
			i = data['list'][id]
			
			// if($('#'+i).length > 0){ 
			
			
			  obj = data['data'][i]
				if(obj){
			 console.log(obj)
			  // if(obj['wave']){	
			  // 
			  // 				    // wave_data.push(obj['wave']);
			  // 			   		// wave_data = wave_data.concat(obj['wave']);
			  // 					for(var j=0;j<obj['wave'].length;j++){
			  // 						wave_data[i].push(obj['wave'][j]);
			  // 					}
			  // 	   				// console.log("v"+i+" "+wave_data[i].length);
			  // 					// wave_data = obj['wave'];
			  // 			   }
			
			  if(true){	

				    // wave_data.push(obj['wave']);
			   		// wave_data = wave_data.concat(obj['wave']);
					// for(var j=0;j<obj['leads'].length;j++){
					// 	wave_data[i].push(obj['wave'][j]);
					// }
						if(wave_data[i]==null){
							wave_data[i] = []
						}
					wave_data[i] = 	wave_data[i].concat(obj['leads'][2])
				   	 console.log(wave_data[i])
	   				// console.log("v"+i+" "+wave_data[i].length);
					// wave_data = obj['wave'];
			   }
			
		    			
			
			 	// console.log(obj)
				$('#'+i+' .hn').html(obj['ref'])
			
				if($('#'+i+' .bp').html()!=obj['bp']){
					$('#'+i).addClass('bp_alert');
					$('#'+i).removeClass('bp_alert_2');
					$('#'+i+' .msg').html("-");
				}else{
					$('#'+i).removeClass('bp_alert');
					// $('#'+i).removeClass('bp_alert_2');
					// $('#'+i+' .msg').html("-");
				}
			
				$('#'+i+' .bp .value').html(obj['bp'])
			
				$('#'+i+' .temp .value').html(obj['temp'])
			
				$('#'+i+' .hr .value').html(obj['hr'])
				$('#'+i+' .pr .value').html(obj['pr'])
				$('#'+i+' .rr .value').html(obj['rr'])
				$('#'+i+' .spo2 .value').html(obj['spo2'])
				$('#'+i+' .co2 .value').html(obj['co2'])
			
			
				$('#'+i+' .score .value').html(obj['score'])
			
			    sos = parseInt(obj['score']);
				color = 'none'
				
				if(sos<2)color='#262'
				if(sos<4&&sos>=2)color='#662'
				if(sos>=4)color='#622'
				
				
				
				$('.note-panel-'+i).css('background',color);
			
			}
			// }else{
			// 		// console.log(lines)
			// 		setTimeout(function () {
			// 	       window.location.href = "nurse"; //will redirect to your blog page (an ex: blog.html)
			// 	    }, 2000); //will call the function after 2 secs.
			//
			// }
			
		}
		 }
	 };

      // var sender = function(f){
      //      var input     = document.getElementById('input');
      //      input.onclick = function(){ input.value = "" };
      //      f.onsubmit    = function(){
      //        ws.send(input.value);
      //        input.value = "send a message";
      //        return false;
      //      }
      //    }(document.getElementById('form'));
      // 	
	
	
	$('.ctl').each(function(){
		
		obj = $(this)
		
		obj.click(function(){
			o = $(this)
			 ws.send(o.attr('id'));
		})
		
	})

	})
   

	// init bunch of sounds
	ion.sound({
	    sounds: [
	        {name: "bell_ring"}
	    ],

	    // main config
	    path: "<%=url_for 'sounds/'%>",
	    preload: true,
	    multiplay: true,
	    volume: 0.9
	});



   </script>
<div style="font-size:0.8em">
  	<div style="float:right" id="timer">
	00:00
	</div>
By E.S.M.Solution Co.,Ltd.
</div>

<%= inline(this,:'_scoring') %>

<i style="color:#666">  <div id="msgs" style="font-size:0.8em"></div></i>
