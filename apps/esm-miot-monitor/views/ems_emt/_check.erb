<%

	ems_command = EMSCommand.find(params[:id])

	admit_log = AdmitLog.find params[:admit_log_id]



	if ems_command and admit_log



		logs = AdmitLog.where(:ems_command_id=>ems_command.id).all
		index = 0
		index = logs.index(admit_log)-1
		index = 0 if index<0
		plog = logs[index]

		mile_meter = plog.mile_meter
		mile_meter = params[:mile_meter] if params[:mile_meter]

		admit_log.update_attributes :stamp=>Time.now, :mile_meter=>mile_meter, :status=>"COMPLETED"

		to_route = AocCaseRoute.where(:departure_log_id=>admit_log.id).first
		to_route.update_attributes :status=>'STARTED' if to_route


		from_route = AocCaseRoute.where(:arrival_log_id=>admit_log.id).first
		from_route.update_attributes :status=>'COMPLETED' if from_route



		admit = Admit.find admit_log.admit_id


		path = "miot/#{@context.settings.name}/z/#{admit.zone.name}"
		msg = 'NULL'
		send_msg = <<MSG
#{'Zone.Message'} #{path}
#{msg.to_json}
MSG
		@context.settings.redis.publish(path, send_msg)

	end



%>
<meta http-equiv="Refresh" content="0; url='index'" />
