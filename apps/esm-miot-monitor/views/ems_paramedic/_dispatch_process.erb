<%

  ems_case = EMSCase.find params[:id]
  @ems_case = ems_case
  admit = Admit.find params[:admit_id]
  @admit = admit

  notify_message = false;
  reload = false;
  popup = false;




  stamp = Time.now unless params[:stamp]
  cmd = params[:cmd]

  if params[:assessment_id]==""
      record = admit.nurse_records.create :name=>"Paramedic" , :description=>params[:cmd], :start_time=>stamp
      notify_message = true;

  else

      assessment = EMSAssessment.find params[:assessment_id]
      notify_message = true;

      case cmd

      when 'cpr'

        if ems_case.cpr_status=="STARTED"

        else

           ems_case.update_attributes :cpr_status=>'STARTED', :cpr_start_at=>Time.now
           record = admit.nurse_records.create :name=>"Paramedic" ,:description=> assessment.name, :start_time=>stamp
           reload = true;
        end
      when 'stop'

          ems_case.update_attributes :cpr_status=>'STOPED'
          record = admit.nurse_records.create :name=>"Paramedic" ,:description=> assessment.name, :start_time=>stamp
          reload = true;

      when 'ekg'

          if ems_case.cpr_status=="STARTED"

            record = admit.nurse_records.create :name=>"Paramedic" ,:description=>"EKG : Confirm rhythm", :start_time=>stamp

          else
            record = admit.nurse_records.create :name=>"Paramedic" ,:description=> assessment.name, :start_time=>stamp

          end
      when 'rhy'

          if ems_case.cpr_status=="STARTED"

            record = admit.nurse_records.create :name=>"Paramedic" ,:description=>"EKG : Confirm rhythm", :start_time=>stamp
            else
            record = admit.nurse_records.create :name=>"Paramedic" ,:description=>"Please start CPR", :start_time=>stamp

          end


          #inline(this,:'dispatch/_patient_ambu', :local=>{:ems_case=>ems_case})

    

      else

   #  custom services

      if assessment and assessment.data!=""

          obj = JSON.parse(assessment.data)

          if obj and obj['med']

              medication = Medication.where(:name=>obj['med']).first
              medication = Medication.create(:name=>obj['med']) unless medication
              now = Time.now
              title = "#{medication.name} #{obj['volume']} #{obj['unit']}"
              med_record = MedicationRecord.create :admit_id=>admit.id, :name=>title, :volume=>obj['volume'], :unit_type=>obj['unit'], :start_time=>now



		      elsif  obj and assessment.type=='patient_status'

              record = admit.nurse_records.create :name=>"Paramedic" ,:description=>"DX : "+assessment.name, :start_time=>stamp

		          patient_status = EMSPatientStatus.where(:name=>obj['name']).first

		          if patient_status

		  	        case_status = EMSCasePatientStatus.create :case_id=>ems_case.id, :patient_status_id=> patient_status.id, :name=>patient_status.name, :title=>patient_status.title

	  	        end

	       elsif obj and assessment.type=='emr'
             notify_message = false
	           # record = admit.nurse_records.create :name=>"Paramedic" ,:description=>"EMR "+assessment.name, :start_time=>stamp
              %>
                <%= inline(this,:'dispatch/_emr', :local=>{:ems_case=>ems_case, :emr_name=>obj['name'], :item=>params[:item]}) %>
              <%
         elsif obj

             record = admit.nurse_records.create :name=>"Paramedic" ,:description=>""+assessment.name, :start_time=>stamp

		     end

        else

          record = admit.nurse_records.create :name=>"Paramedic" ,:description=>""+assessment.name, :start_time=>stamp

        end


      end



  end





if notify_message

  path = "miot/#{@context.settings.name}/z/#{admit.zone.name}"
  msg = 'NULL'
  send_msg = <<MSG
#{'Zone.Message'} #{path}
#{msg.to_json}
MSG

@context.settings.redis.publish(path, send_msg)
end

%>
<% if reload %>
<script>
    window.location="show?id=<%=ems_case.id%>&page=paramedic"
</script>
<% end %>
<% if popup %>
<script>
    window.open("<%="../EMS/show"%>?page=emr&id=<%="#{ems_case.id}"%>", 'window name', 'window settings');
</script>
<% end %>
