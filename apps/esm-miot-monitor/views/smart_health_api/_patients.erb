<%
	
	api_token = Setting.get :api_token
	
	
    result = {:result=>"406 Error",:code=>406,:message=>"Not found parameter records"}

   if api_token == params[:token]
	
    m_field = {
        'pat_hn'=>:hn,
        'pat_cid'=>:public_id,
        'pat_nameatc'=>:prefix_name,
        'pat_namefirst'=>:first_name,
        'pat_namelast'=>:last_name,
        'pat_bdate'=>:dob, 
        'pat_gender'=>:gender,
        'pat_pname'=>:contact_name,
        'pat_ptel0'=>:contact_phone,
        'pat_blood'=>:blood,
        'pat_marr'=>:status,
        'pat_occupat'=>:job,
        'pat_race'=>:race,
        'pat_nation'=>:nation,
        'pat_religion'=>:religion,
        'pat_pid'=>:passport,
        'pat_add0'=>:addr,
        'pat_add1'=>:addr_present,
        'pat_note'=>:note,	        
    }
    temprecords = params[:records]
    # temprecords = '[
 #        {
 #            "pat_hn":"642001",
 #            "pat_hos0mainid":"10912",
 #            "pat_hos0mainn":"รพ.ชำนิ",
 #            "pat_hos0subid":"03061",
 #            "pat_hos0subn":"รพสต.ปราสาทพร",
 #            "pat_cid":"0193334445678",
 #            "pat_nameatc":"นาย",
 #            "pat_namefirst":"ดำรง",
 #            "pat_namelast":"สังวาลรัตน์",
 #            "pat_bdate":"1976-05-12",
 #            "pat_gender":"ชาย",
 #            "pat_pname":"นาย xxxx",
 #            "pat_ptel0":"0994891212",
 #            "pat_blood":"บี",
 #            "pat_marr":"โสด",
 #            "pat_occupat":"รับจ้าง",
 #            "pat_race":"ไทย",
 #            "pat_nation":"ไทย",
 #            "pat_religion":"พุทธ",
 #            "pat_pid":"0193334445678",
 #            "pat_add0":"บ้านเลขที่ xxxx",
 #            "pat_add1":"บ้านเลขที่ xxxx",
 #            "pat_note":"หมายเหตุ..."
 #        },
 #        {
 #            "pat_hn":"642002",
 #            "pat_hos0mainid":"10912",
 #            "pat_hos0mainn":"รพ.ชำนิ",
 #            "pat_hos0subid":"03061",
 #            "pat_hos0subn":"รพสต.ปราสาทพร",
 #            "pat_cid":"0193334445679",
 #            "pat_nameatc":"นส.",
 #            "pat_namefirst":"ดำริ",
 #            "pat_namelast":"สังวาลรัตน์",
 #            "pat_bdate":"1976-05-12",
 #            "pat_gender":"หญิง",
 #            "pat_pname":"นาย xxxx",
 #            "pat_ptel0":"0994891212",
 #            "pat_blood":"บี",
 #            "pat_marr":"โสด",
 #            "pat_occupat":"รับจ้าง",
 #            "pat_race":"ไทย",
 #            "pat_nation":"ไทย",
 #            "pat_religion":"พุทธ",
 #            "pat_pid":"0193334445679",
 #            "pat_add0":"บ้านเลขที่ xxxx",
 #            "pat_add1":"บ้านเลขที่ xxxx",
 #            "pat_note":"หมายเหตุ..."
 #        }
 #    ]'
    if temprecords
        temprecords = params[:records] if params[:records]
        zone = Zone.where(:mode=>'smart_health').first
        default_hos = SHHospital.all.last
        begin
            data = JSON.parse(temprecords)
            data = [data] if !data.kind_of?(Array)
            hns = []
            datareturn = []
            data.each{|i|
                rec = {}
                for k in i.keys
                    rec[m_field[k]]=i[k] if m_field[k]
                end
                if rec[:hn]
                    #Patient
                    rec[:zone_id]=zone.id if zone
                    rec[:gender] = 'M' if rec[:gender] and rec[:gender]=='ชาย'
                    rec[:gender] = 'F' if rec[:gender] and rec[:gender]=='หญิง'
                    patients = Patient.where(:hn=>rec[:hn]).first
                    hns << rec[:hn] if !hns.index rec[:hn]
                    if patients
                        patients.update_attributes rec
                        datareturn << {:hn=>rec[:hn],:action=>'update'}
                    else
                        patients  = Patient.create rec
                        datareturn << {:hn=>rec[:hn],:action=>'insert'}
                    end
                    
                    #SHRelation
                    rl = SHRelation.where(:patient_id=>patients.id).first
                    if !rl
                        rl = SHRelation.create :patient_id=>patients.id,:hospital_id=>default_hos.id if default_hos
                    end
                    if i['pat_hos0mainid'] and i['pat_hos0mainid']!=''
                        hospital = SHHospital.where(:code=>i['pat_hos0mainid']).first
                        hospital = SHHospital.create :code=>i['pat_hos0mainid'],:name=>i['pat_hos0mainn'] if !hospital
                        rl.update_attributes :hospital_id=>hospital.id
                    end
                    if i['pat_hos0subid'] and i['pat_hos0subid']!=''
                        network = SHNetwork.where(:code=>i['pat_hos0subid']).first
                        network = SHNetwork.create :code=>i['pat_hos0subid'],:name=>i['pat_hos0subn'] if !network 
                        rl.update_attributes :network_id=>network.id
                    end

                    #Admit
                    am = Admit.where(:patient_id=>patients.id).first
                    if !am
                        am = Admit.create :patient_id=>patients.id,:admit_stamp=>Time.now,:status=>'new'
                        am.update_attributes :zone_id=>zone.id if zone
                    end
                end
            }
            result = {:result=>"200 OK",:code=>200,:message=>"#{hns.size} patients import success",:data=>datareturn}
        rescue Exception=>e
            result = {:result=>"401 Error",:code=>401,:message=>e.to_s}
        end
    end
	
else
	result = {:result=>'403 Forbidden', :code=>403}
end
%>
<%=result.to_json%>