<div class="container">
  <div class="row">
    <div class="col-12">
      <div id="chartContainer"></div>
    </div>
  </div>
  <div class="row">
    <div class="col-12">
      <table class="table table-striped table-hover">
        <caption>Patient Record Information</caption>
        <thead>
          <tr>
            <th>Record ID</th>
            <th>Patient Name</th>
            <th>HN</th>
            <th>Age</th>
            <th>Gender</th>
            <th>Complaint</th>
            <th>Arrival Time</th>
            <th>Duration</th>
            <th>Last Visit</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>1</td>
            <td>นายธนารัฐ พิพิธยการ</td>
            <td>58749-61</td>
            <td>57</td>
            <td>ชาย</td>
            <td>Chest Pain</td>
            <td>09:59 AM</td>
            <td>00:35 HR</td>
            <td>09:59 AM</td>
          </tr>
          <tr>
            <td>2</td>
            <td>นางสาว สมหญิง ใจดี</td>
            <td>12345-67</td>
            <td>32</td>
            <td>หญิง</td>
            <td>Fever</td>
            <td>10:15 AM</td>
            <td>00:10 HR</td>
            <td>10:00 AM</td>
          </tr>
          <tr>
            <td>3</td>
            <td>นายสมชาย รักชาติ</td>
            <td>98765-43</td>
            <td>65</td>
            <td>ชาย</td>
            <td>Headache</td>
            <td>11:30 AM</td>
            <td>01:00 HR</td>
            <td>08:00 AM</td>
          </tr>
          <tr>
            <td>4</td>
            <td>นายสมศรี ใจงาม</td>
            <td>98765-55</td>
            <td>22</td>
            <td>หญิง</td>
            <td>Headache</td>
            <td>11:45 AM</td>
            <td>01:10 HR</td>
            <td>08:20 AM</td>
          </tr>
          <tr>
            <td>5</td>
            <td>นายสมปอง ขยัน</td>
            <td>98765-44</td>
            <td>43</td>
            <td>ชาย</td>
            <td>Headache</td>
            <td>11:50 AM</td>
            <td>01:05 HR</td>
            <td>08:30 AM</td>
          </tr>
          <!-- Add more rows as needed -->
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
  // Sample patient data (replace with your actual data)
  const patientData = [
    { age: 57, gender: "ชาย" },
    { age: 32, gender: "หญิง" },
    { age: 65, gender: "ชาย" },
    { age: 22, gender: "หญิง" },
    { age: 43, gender: "ชาย" },

    // ... add more patient data here ...
  ];

  // Function to create the bar chart
  function createBarChart(data) {
    // Prepare data for chart
    const ageGroups = {};
    const genderCounts = {};
    data.forEach(patient => {
      const age = patient.age;
      const gender = patient.gender;
      // Group ages (e.g., 0-10, 11-20, ...)
      const ageGroup = Math.floor(age / 10) * 10;
      ageGroups[ageGroup] = (ageGroups[ageGroup] || 0) + 1;
      genderCounts[gender] = (genderCounts[gender] || 0) + 1;
    });

    // Set the dimensions and margins of the graph
    const margin = { top: 20, right: 20, bottom: 70, left: 40 },
      width = 600 - margin.left - margin.right,
      height = 400 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    const svg = d3.select("#chartContainer")
      .append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform",
        "translate(" + margin.left + "," + margin.top + ")");

    // --- Gender Chart ---
    const genderChartData = Object.entries(genderCounts).map(([gender, count]) => ({ gender, count }));
    // X axis
    const xGender = d3.scaleBand()
      .range([0, width / 2])
      .domain(genderChartData.map(d => d.gender))
      .padding(0.2);
    svg.append("g")
      .attr("transform", `translate(0, ${height})`)
      .call(d3.axisBottom(xGender))
      .selectAll("text")
      .style("text-anchor", "middle");

    // Add Y axis
    const yGender = d3.scaleLinear()
      .domain([0, d3.max(genderChartData, d => d.count)])
      .range([height, 0]);
    svg.append("g")
      .call(d3.axisLeft(yGender));

    // Bars
    svg.selectAll("genderBars")
      .data(genderChartData)
      .enter()
      .append("rect")
      .attr("class", "bar")
      .attr("x", d => xGender(d.gender))
      .attr("y", d => yGender(d.count))
      .attr("width", xGender.bandwidth())
      .attr("height", d => height - yGender(d.count))
      .attr("fill", d => d.gender === "ชาย" ? "blue" : "pink");

    // Add labels to bars
    svg.selectAll("genderLabels")
      .data(genderChartData)
      .enter()
      .append("text")
      .attr("class", "label")
      .attr("x", d => xGender(d.gender) + xGender.bandwidth() / 2)
      .attr("y", d => yGender(d.count) - 5)
      .attr("text-anchor", "middle")
      .text(d => d.count);

    // Add title for gender chart
    svg.append("text")
      .attr("x", width / 4)
      .attr("y", -margin.top / 2)
      .attr("text-anchor", "middle")
      .style("font-size", "16px")
      .style("text-decoration", "underline")
      .text("Gender Distribution");
    // --- Age Group Chart ---
    const ageChartData = Object.entries(ageGroups).map(([age, count]) => ({ age: `${age}-${parseInt(age) + 9}`, count }));

    // X axis for age
    const xAge = d3.scaleBand()
      .range([width / 2, width]) // starts from the end of gender chart
      .domain(ageChartData.map(d => d.age))
      .padding(0.2);
    svg.append("g")
      .attr("transform", `translate(0, ${height})`)
      .call(d3.axisBottom(xAge))
      .selectAll("text")
      .style("text-anchor", "middle");

    // Y axis for age
    const yAge = d3.scaleLinear()
      .domain([0, d3.max(ageChartData, d => d.count)])
      .range([height, 0]);
    svg.append("g")
      .attr("transform", `translate(${width / 2}, 0)`) // move the axis to the start of the age chart
      .call(d3.axisLeft(yAge));

    // Bars for age
    svg.selectAll("ageBars")
      .data(ageChartData)
      .enter()
      .append("rect")
      .attr("class", "bar")
      .attr("x", d => xAge(d.age))
      .attr("y", d => yAge(d.count))
      .attr("width", xAge.bandwidth())
      .attr("height", d => height - yAge(d.count))
      .attr("fill", "green");

    // Add labels to bars for age
    svg.selectAll("ageLabels")
      .data(ageChartData)
      .enter()
      .append("text")
      .attr("class", "label")
      .attr("x", d => xAge(d.age) + xAge.bandwidth() / 2)
      .attr("y", d => yAge(d.count) - 5)
      .attr("text-anchor", "middle")
      .text(d => d.count);
    // Add title for age chart
    svg.append("text")
      .attr("x", width * 3 / 4)
      .attr("y", -margin.top / 2)
      .attr("text-anchor", "middle")
      .style("font-size", "16px")
      .style("text-decoration", "underline")
      .text("Age Group Distribution");

    // Add x-axis label
    svg.append("text")
      .attr("class", "x-axis-label")
      .attr("text-anchor", "middle")
      .attr("x", width / 2)
      .attr("y", height + margin.bottom - 20)
      .text("Gender / Age Group");

    // Add y-axis label
    svg.append("text")
      .attr("class", "y-axis-label")
      .attr("text-anchor", "middle")
      .attr("transform", "rotate(-90)")
      .attr("y", -margin.left + 15)
      .attr("x", -height / 2)
      .text("Number of Patients");

  }

  // Call the function to create the chart with the data
  createBarChart(patientData);
</script>
<style>
.table {
    width: 80%;
    margin: 20px auto;
    border-collapse: collapse;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

th,
td {
    border: 1px solid #ddd;
    padding: 12px;
    text-align: left;
}

th {
    background-color: #f0f0f0;
    font-weight: bold;
}

tr:nth-child(even) {
    background-color: #f9f9f9;
}

tr:hover {
    background-color: #f0f0f0;
}

caption {
    caption-side: top;
    font-weight: bold;
    font-size: 1.2em;
    margin-bottom: 10px;
}

/* Style for the chart container */
#chartContainer {
    width: 600px;
    height: 400px;
    margin: 20px auto;
}

.bar {
    fill: steelblue;
}

.bar:hover {
    fill: orange;
}

.axis--x path {
    display: none;
}

.label {
    font-size: 12px;
    fill: black;
}
</style>

<script src="https://d3js.org/d3.v7.min.js"></script>
