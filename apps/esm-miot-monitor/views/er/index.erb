<%= inline(this,:'_init')  %>
<div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
					<div class="breadcrumb-title pe-3"> Smart ER</div>
					<div class="ps-3">
						<nav aria-label="breadcrumb">
							<ol class="breadcrumb mb-0 p-0">
								<li class="breadcrumb-item"><a href="javascript:;"><i class="bx bx-home-alt"></i></a>
								</li>
								<li class="breadcrumb-item active" aria-current="page"></li>
							</ol>
						</nav>
					</div>
					<div class="ms-auto">
				
						<div class="btn-group">
							<button type="button" class="btn btn-primary">Settings</button>
							<button type="button" class="btn btn-primary split-bg-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown">	<span class="visually-hidden">Toggle Dropdown</span>
							</button>
							<div class="dropdown-menu dropdown-menu-right dropdown-menu-lg-end">	<a class="dropdown-item" href="javascript:;">Action</a>
								<a class="dropdown-item" href="javascript:;">Another action</a>
								<a class="dropdown-item" href="javascript:;">Something else here</a>
								<div class="dropdown-divider"></div>	<a class="dropdown-item" href="javascript:;">Separated link</a>
							</div>
						</div>
					</div>
				</div>


<div class="card">
    <div class="card-body">
        <div class="row">
<%
 
    rooms = Room.all
    rooms.each do |room|
    records = ERCase.where(room_id: room.id, :status=>'Admitted').all
  

%>

            <div class="col-3">
                <div class="panel">
                    
                <%= inline(this,'_room_partial', :this=>this, :room=>room)  %>

                </div>
            </div>
            <% end %>
        </div>
    </div>
</div>

<div class="msg"></div>


<script>

  var ws 


  function onopen(event){

	show('websocket opened');
  	ws.send('WS.Select name=<%=session.id%>\n["Zone <%="miot/#{@context.settings.name}/z/#{@current_zone.name}"%>","ZoneUpdate zone_id=*","EMSUpdate event_id=*", "Alert station_id=*","Data.Image station_id=*"]')

  }

  function onclose(event){
	show('websocket closed, reconnect in 2 sec');

 	setTimeout(function () {
		ws.close();
       //window.location.href = "index"; //will redirect to your blog page (an ex: blog.html)
		//reconnect();
    }, 2000); //will call the function after à¸– secs.

  }

 function onerror(event) {
	show('websocket error, reconnect in 5 sec');

    console.error("WebSocket error:", event);
		setTimeout(function () {
    	//window.location.href = "index"; //will redirect to your blog page (an ex: blog.html)
		reconnect();
    }, 5000);
 };

  function onmessage(m) {



	    $('.msg').html("Network is online : "+(m.timeStamp/1000)+ " s" )
	

		lines = m.data.split("\n")
        console.log(lines)

		if(lines[0].split(" ")[0]=='Zone.Refresh'){
	
					window.location.reload();

		

		}else
		if(lines[0].split(" ")[0]=='Zone.Message'){

			reload_message()

		}else

		if(lines[0].split(" ")[0]=='Zone.Refresh'){
			// if(local_map!=null)
			// update(lines)
			obj = JSON.parse(lines[1])
			
			if(obj.hasOwnProperty("data")){
				
				// console.log(obj)

				Object.keys(obj["data"]).forEach(function (key) { 
   				 var value = obj["data"][key]
					console.log(key, value)
					list = ['bp', 'pr', 'spo2', 'rr'];
					for(i=0;i<list.length;i++){
						$('.station-'+key+" ."+list[i]).html(value[list[i]])
					}
					


				})

			}

		}
  }


 function reconnect(){
		
	ws  = new WebSocket('wss://' + window.location.host + "/ws/<%=@context.settings.name%>/Home/index");
	ws.onopen = onopen;
	ws.onclose = onclose;
	ws.onmessage = onmessage;
	ws.onerror = onerror;
	
	show('websocket reconnect');

  }	


  tag = 'wss://' + window.location.host + "/ws/<%=@context.settings.name%>/Home/index";





  var active_dispatch = 'Active' ;


  function check_dispatch(){



	status = 'Active'

	if(active_dispatch==false)status= "InActive"

  	ws.send("EMD.Update name=<%=@current_user.id %>\n{\"user_id\":\"<%=@current_user.id%>\",\"zone_name\":\"<%=@current_zone.name%>\", \"zone_id\":\"<%=@current_zone.id%>\",\"status\":\""+status+"\"}")
	


  }

   $('#flexSwitchCheckChecked').change(function() {
        if(this.checked) {
            var returnVal = true;
            $(this).prop("checked", returnVal);
        }
       active_dispatch = this.checked
		 check_dispatch()
    });

reconnect();

</script>
