<%

	ems_command = EMSCommand.find(params[:id])

	admit_log = AdmitLog.find params[:admit_log_id]



	if ems_command and admit_log



		logs = AdmitLog.where(:ems_command_id=>ems_command.id).all
		index = 0
		index = logs.index(admit_log)-1
		index = 0 if index<0
		plog = logs[index]

		ambulance = ems_command.ambulance

		mile_meter  = plog.mile_meter
		
		last_mile = ambulance.last_mile

		if mile_meter == nil 
			plog.update_attributes :mile_meter=>last_mile
			mile_meter = last_mile
		end
		
		ambulance.update_attributes :last_mile=> mile_meter if ambulance


		admit_log.update_attributes :stamp=>Time.now, :mile_meter=>mile_meter, :status=>"COMPLETED"


  


		to_route = AocCaseRoute.where(:departure_log_id=>admit_log.id).first

		if to_route
			to_route.update_attributes :status=>'STARTED'

			key = Setting.get(:google_api_key)
			direction = google_direction(ambulance.last_location, to_route.stop_latlng, key)

			if direction[:status]=='200 OK'
				to_route.update_attributes :est_distance=>direction[:total_distance][:value], :est_duration=>direction[:total_duration][:value], :act_distance=>direction[:total_distance][:value], :act_duration=>direction[:total_duration][:value]
			end
		end

		from_route = AocCaseRoute.where(:arrival_log_id=>admit_log.id).first
		from_route.update_attributes :status=>'COMPLETED' if from_route



		admit = Admit.find admit_log.admit_id


		path = "miot/#{@context.settings.name}/z/#{admit.zone.name}"
		msg = 'NULL'
		send_msg = <<MSG
#{'Zone.Message'} #{path}
#{msg.to_json}
MSG
		@context.settings.redis.publish(path, send_msg)

		# key :latlng, String
		# 	    key :stamp, Time
		# 	    key :mile_meter, Integer

	end



%>
