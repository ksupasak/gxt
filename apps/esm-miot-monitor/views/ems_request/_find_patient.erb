<%
	
patient = Patient.where(:hn=>params[:hn]).first


if true 

    ##############################################################  

    his_get_patient_uri = URI("#{Setting.get(:gateway,'localhost')}/get_patient_by_hn?hn=#{params[:hn]}")
    
	
	url_config = Setting.get(:gateway,'localhost')
	
	if url_config.split("/").size>4
	
	
    his_get_patient_uri = URI("#{url_config}?hn=#{params[:hn]}")
	
	
	else 
	
    his_get_patient_uri = URI("#{Setting.get(:gateway,'localhost')}/his/get_patient_info?hn=#{params[:hn]}")
	
	end
	
	
	
    ##############################################################  
  

	puts his_get_patient_uri
    
    robj = {'hn'=>params[:hn]}
  
  
    msg = nil
  
    begin
  
    content = "{}"    
  
  
    
  
    req = Net::HTTP::Get.new(his_get_patient_uri.to_s)

    # setting both OpenTimeout and ReadTimeout
    res = Net::HTTP.start(his_get_patient_uri.host, his_get_patient_uri.port, :open_timeout => 5, :read_timeout => 5, :use_ssl=>true) {|http|
		
         http.request(req)

    }
	
	
	
	
	content = res.body


		
	rx = JSON.parse(content)
	
	
	
		
		
	if rx['status'].to_s.index('200')
		
		if rx['record']
		robj.merge! rx['record'] 
		else
		robj.merge! rx 
		end
		
		prefix = robj['prefix_name']
		prefix = robj['prefix'] if robj['prefix']
		
		gender = "-"
		gender = "M" if robj['gender']=='1'
		gender = "F" if robj['gender']=='2'
		
		puts robj.inspect 
		
		
		
		if patient
			
			patient.update_attributes :first_name=>robj['first_name'], :last_name=>robj['last_name'], :prefix_name=>prefix, :gender=>gender, :dob=>Date.parse(robj['birth_date']), :public_id=>robj['public_id'], :contact_name=>robj['contact_desc'], :contact_phone=>robj['contact_tel']
	
		else 
  	  	
			patient = Patient.create :hn=>robj['hn'], :first_name=>robj['first_name'], :last_name=>robj['last_name'], :prefix_name=>prefix, :gender=>gender, :dob=>Date.parse(robj['birth_date'], :public_id=>robj['public_id'], :contact_name=>robj['contact_desc'], :contact_phone=>robj['contact_tel'])
		
		end
		
	else
		
		patient = Patient.new :hn=>params[:hn] unless patient 
	
	end
	

	rescue Net::ReadTimeout => exception
	        # STDERR.puts "#{seca_uri.host}:#{seca_uri.port} is NOT reachable (ReadTimeout)"
	        msg = "NOT reachable (ReadTimeout)"
	   #      sleep 10
	rescue Net::OpenTimeout => exception
	        # STDERR.puts "#{seca_uri.host}:#{seca_uri.port} is NOT reachable (OpenTimeout)"
	        msg = "NOT reachable (OpenTimeout)"
	       #  sleep 10
	rescue Exception =>exception        
	        # STDERR.puts "#{seca_uri.host}:#{seca_uri.port} is NOT reachable (OpenTimeout)"
	        msg = exception.to_s
    end

	puts msg
	
end


patient = Patient.new :hn=>params[:hn] unless patient 


patient.age = patient.to_age_text
patient = Patient.where(:hn=>params[:hn]).first

@current_zone = Zone.find session[:current_zone]

patient.age = patient.to_age
	
%><%=patient.to_json%>