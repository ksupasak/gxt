		function genData(data){

			scale = 50;

			for(var i=0;i<2000;i++){
				r = Math.random();
				v = Math.sin(360/20*i*Math.PI/180)*(scale*r)+50;
				data.push(v);
			}

		}

		function preset(idx,rdx){
			
			var svg;
	var w = 80;
	var h = 80;
			// console.log(""+idx+" "+rawdata.length)
		    osvg = d3.select("#"+idx+"-"+rdx);
	
		      svg = d3.select("#"+idx)
		        .append("svg")
				.attr("width", w)
			    .attr("height", h)
			    .attr('id',""+idx+"-"+rdx);
	
			
		}
	
	
	function aniLine(idx,rdx, sampling, rawdata, last, print){
	var w = 80;
    var h = 80;
	var svg;

	// console.log(""+idx+" "+rawdata.length)
    osvg = d3.select("#"+idx+"-"+rdx);
	
	if(osvg.size()==1){
		osvg.selectAll("path").remove();
		svg = osvg
	}else{
      svg = d3.select("#"+idx)
        .append("svg")
	
        .attr("width", w)
        .attr("height", h)
        .attr("id", "visualization");
    
	
  		svg.attr('id',""+idx+"-"+rdx);
		
	}
	
	

	
	
   

	// svgo.selectAll("path.old").remove();
	// svg.selectAll("path").attr("class", "old");

    var x = d3.scaleLinear().domain([0, sampling]).range([0, w]);
    var y = d3.scaleLinear().domain([1000,-1000]).range([10, h - 10]);

    var line = d3.line()
      .x(function(d,i) {return x(i);})
      .y(function(d) {return y(d);})
      .curve(d3.curveNatural)

    // data is created inside the function so it is always unique
    let repeat = () => {
      var data = rawdata //d3.range(101).map(function(){return Math.random()*100})

      // Uncomment following line to clear the previously drawn line
      //svg.selectAll("path").remove();

      // Set a light grey class on old paths

      // svg.selectAll("path").remove();
      // var last_path = svg.append("path")
      // 		      .attr("d", line(last))
      // 		      .attr("stroke", "#131")
      // 		      .attr("stroke-width", "2")
      // 		      .attr("fill", "none")
      // 		      .attr("class", "old");
      // 		      last_path.add

      var path = svg.append("path")
        .attr("d", line(data))
        .attr("stroke", "green")
        .attr("stroke-width", "1")
        .attr("fill", "none");
		if(idx=='wave-1'){
				path.attr("stroke","#96d6f2")
					}
						if(idx=='wave-0'){
								path.attr("stroke","#cc8888")
									}
		if(print){
			path.attr("stroke", "black")
		}
	  	
      var totalLength = path.node().getTotalLength();

      
	  path
        .attr("stroke-dasharray", totalLength + " " + totalLength)
        .attr("stroke-dashoffset", totalLength)
        .transition()
          .duration(1000)
          .ease(d3.easeLinear)
	  .attr("stroke-dashoffset", 0);
	  
	  
          // .on("end", repeat);
    };
	
    repeat();
	
	};




	// aniLine('line1')
	// aniLine('line2')
	// aniLine('line3')
	// aniLine('line4')
    
function presetWave(div){
	var show = 8; //second
	for(var i=0;i<show;i++){
		
		preset(div,i);
		
	}
	

}
	function showWave(div,data,id){
		// console.log(div+" "+data.length);
	
	
	var n = 200; // sample for a second

	
    var cut = 1;
	var show = 8; //second
	var second = 0;
	var lastdata = [];
	
	var intervalID = setInterval(function(){
		if(second%show==show-1){
		
			// $('#'+div).html("");
		
		}
			// genData(data);
			data = lead_data[id];
			console.log('all '+id+" "+second%show+' = '+data.length);
			$('#wave-'+id+"-note").html(""+data.length);
			if(data.length>show*n){
				data.splice(0,data.length-n*2);
			}
			if(second%cut==cut-1){
				
				rawdata = data.splice(0,cut*n);

				
				if(rawdata.length>0){
					aniLine(div,second%show,rawdata.length ,rawdata,lastdata,false);
					lastdata = rawdata;
				}
				else{
					second-=1;
				}
				// second = 0 ;
			}
		
			second+=1;
	}, 1000);

	
   }


	function printWave(div,data,id){
		// console.log(div+" "+data.length);
	var n = 200; // sample for a second
    var cut = 1;
	var show = 20; //second
	var second = 0;
	var lastdata = [];

	console.log(data.length)
		
	for(var j=0;j<show;j++){
			// genData(data);
			data = lead_data[id];
			// console.log('all '+id+" "+second%show+' = '+data.length);
	
			if(second%cut==cut-1){
				
				rawdata = data.splice(0,cut*n);

				
				if(rawdata.length>0){
					aniLine(div,second%show,rawdata.length ,rawdata,lastdata,true);
					lastdata = rawdata;
					
				}else{
					second-=1;
				}
				// second = 0 ;
			}
		
			second+=1;
			
		}	
	
   }
