<style>
        .custom-height {
            height: 600px; /* Default height */
        }

        @media (min-width: 992px) { /* Large screen breakpoint (Bootstrap lg) */
            .custom-height {
                height: 900px; /* Increased height on large screens */
            }
        }
    </style>
<%

meeting = nil
cls = "primary"

if params[:case_id]
	
	ems_case = EMSCase.find params[:case_id]

	mask = ""
	record = nil
	
	if ems_case
		
		mask = ems_case.video_status
	
		mask = "" if ems_case.video_status==nil
		
		mask = mask.split("|")
		
		mask << params[:side] unless mask.index(params[:side])
		
		ems_case.update_attributes :video_status=>mask.join("|")
	
	    ems_case.update_message @context, "video call", 'Zone.Message'
		
		record = ems_case	
		
		code = EMSCode.find record.init_cbd_code 

		cls = record.init_code.get_class if code	
	
	
	end
		

	
	meeting  = EMSMeeting.where(:name=>params[:id]).first 
	
		
elsif params[:id]

	meeting  = EMSMeeting.where(:name=>params[:id]).first 

end
	
	
emd = false

emd = true if  params[:side]=='emd'

    
        type = 'PRE'
        type = params[:type] if params[:type]
    
        session_id = 'SessionA'
        session_id = params[:id] if params[:id]
		
	    if ems_case
      
      
            session_id = "#{ems_case.get_meeting_key(Setting.get("aoc_code"))}-#{type}" unless params[:id]
			
			
			meeting = EMSMeeting.where(:name=>session_id).first
			login = "N/A"
			login = @current_user.login if @current_user
			
			
			unless meeting
         
			   meeting = EMSMeeting.create(:name=>session_id, :creator=>login, :case_id=>ems_case.id, :status=>'OPEN', :type=>type)
			   
			   if type=='EMS' 
			   
			   	ems_case.send_push_noti "EMS-Meeting", "Create EMS Room", "meeting", session_id
			   
			   end    
			   
		   #	meeting  = EMSMeeting.where(:name=>params[:id]).first 
			   
			
			end
		
		
		end
		
	if record and meeting
		link = "video?id=#{meeting.name}&case_id=#{record.id}" 
		else
		link = "video?id=#{meeting.name}"
	end
		

		
		
    %>

<html>
    <head>
		
		<link href="/rocker/assets/css/bootstrap.min.css" rel="stylesheet">
		<link href="/rocker/assets/css/bootstrap-extended.css" rel="stylesheet">
			<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&amp;display=swap" rel="stylesheet">
		<link href="/rocker/assets/css/app.css" rel="stylesheet">
		<link href="/rocker/assets/css/icons.css" rel="stylesheet">
        <script src='/vendor/openvidu/openvidu-webcomponent-2.28.0.js'></script>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="/vendor/openvidu/openvidu-webcomponent-2.28.0.css">
	    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
<style>
	:root {
	  --ov-primary-color: #303030;
	  --ov-secondary-color: #3e3f3f;
	  --ov-tertiary-color: #598eff;
	  --ov-warn-color: #EB5144;
	  --ov-accent-color: #ffae35;
	  --ov-light-color: #e6e6e6;

	  --ov-logo-background-color: #3e3f3f;

	  --ov-text-color: #ffffff;

	  --ov-panel-text-color: #1d1d1d;
	  --ov-panel-background: #ffffff;

	  --ov-buttons-radius: 50%;
	  --ov-leave-button-radius: 10px;
	  --ov-video-radius: 5px;
	  --ov-panel-radius: 5px;
	}
	</style>
<script src="https://kit.fontawesome.com/13a3acd719.js" crossorigin="anonymous"></script>

    </head>
    <body class="mat-typography" id="body" style="margin-right:20px;height:1000px;overflow:scroll">
	
	<% if meeting.status!='OPEN' or (ems_case and ems_case.status!="New")  %>	
	<meta http-equiv="refresh" content="0; url=video_close" />
	<% end %>
		
	<div class="container" >

	<div class="row">
		<div class="col-xs-9">
		
		</div>
	</div>
	<div class="row" >
		
		
	<% if params[:side]=='request' %>
	<div   class="col-12 custom-height" style=""  >
		<app-root>
        <openvidu-webcomponent style=""
		 prejoin="false"	
		></openvidu-webcomponent>
		</app-root>
		<ov-videoconference [tokens]="tokens">
		  <div *ovToolbar style="text-align: center;">
		    <!-- <button (click)="toggleVideo()">Toggle Video</button>
		    <button (click)="toggleAudio()">Toggle Audio</button> -->
		  </div>
		</ov-videoconference>
		
		
	</div>
		
	<% elsif params[:side]=='consult' %>
	<div   class="col-12 custom-height" style=""  >
		<app-root>
        <openvidu-webcomponent style=""
		 prejoin="false"
 		 video-muted="true"
		
		></openvidu-webcomponent>
		</app-root>
		<ov-videoconference [tokens]="tokens">
		  <div *ovToolbar style="text-align: center;">
		    <!-- <button (click)="toggleVideo()">Toggle Video</button>
		    <button (click)="toggleAudio()">Toggle Audio</button> -->
		  </div>
		</ov-videoconference>
		
		
	</div>
	
	<% else %>
	
	<div   class="col-md-9 col-12 custom-height" style=""    >
		<app-root>
        <openvidu-webcomponent style=""></openvidu-webcomponent>
		</app-root>
		<ov-videoconference [tokens]="tokens">
		  <div *ovToolbar style="text-align: center;">
		    <!-- <button (click)="toggleVideo()">Toggle Video</button>
		    <button (click)="toggleAudio()">Toggle Audio</button> -->
		  </div>
		</ov-videoconference>
		
		
	</div>
	

	
		<div class="col-md-3 col-12" >
			
			
			<%
				
				
			%>
			
			<div class="row" id="<%=meeting.name%>">
			
			
			
			<div class="col-12  d-flex align-items-stretch">
				<% 
					# record = EMSCase.new unless record 
				
				%>
				<div class="card radius-10 border-start border-0 border-3 border-<%=cls%>">
				<div class="card-body">
					<div class="d-flex align-items-center">
						<div class="row" >


								
							<div class="row">

								<div class="col-12 col-xl-12">
									<h4 class="my-1 text-<%=cls%> d-flex justify-content-center">

										<%=meeting.name%>

									</h4>

								</div>

							

							</div>
							
							
							<% if record %>
							
						
			
							<div class="row">

								<div class="col-12 col-xl-7">
									<h4 class="my-1 text-<%=cls%>">

										<%=record.case_no%>

									</h4>

								</div>

								<div class="col-12 col-xl-5">
									<h4 class="my-1 text-info " >

									 Tel: <%=link_to record.contact_phone, "tel:#{record.contact_phone}"%>

									</h4>
								</div>

							</div>
							

							<div class="row">

								<div class="col-7">
									‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á : <span class="contact_name"><%=record.contact_name%></span>
								</div>

							<div class="col-5">
								<label class="phone">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà<label> : <span class="contact_name v"><%=record.location%></span>
							</div>


							</div>



							<div class="row">

								<div class="col-12">
									<label class="phone">‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ô‡∏≥<label> : <span class="cheif_complain v"><%=record.chief_complain%></span>
								</div>



							</div>



				
					<div class="d-flex align-items-center">
							<div class="row">

						<div class="row">

							<div class="col-7">
								<h4 class="my-1 ">

									‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ <%=record.patient_gender%> <%=record.patient_age%>

								</h4>

							</div>

							<div class="col-5">
								<h4 class="my-1 text-<%=cls%>">
									<%=record.init_code.name.split(" ")[0] if record.init_code %>

								</h4>
							</div>

						</div>



						<div class="row">

							<div class="col-7">
								‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ : <span class=":init_cbd_code v"><%=record.patient_name%></span>
							</div>

							<div class="col-5">
								CID : <span class=":init_cbd_code v"><%=record.patient_cid%></span>
							</div>



						</div>


						<div class="row">



							<div class="col-7">
								<label class="phone">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß<label> : <span class="cheif_complain v"><%=record.patient_underlying%></span>
							</div>

						<div class="col-5">
							<label class="phone">HN : <label> <span class="contact_name v"><%=record.patient_hn%></span>
						</div>


						</div>
					



					
						
						<% end %>
						<%= inline(this,"../ems/_video_partial", :this=>this, :meeting=>meeting, :ems_case=>record)  %>

						<div class="row">
						<div class="col-7">
								‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° : 						   
							</div>
							<div class="col-5">
						<a href="javascript:;" class="  meeting-tag  "> <span class="meeting-participant">-</span></a>
						</div>
						
						</div>
						<div class="row">
							<div class="col-7">
								Link : 						   

							</div>
							<div class="col-5">
									<div class="list-inline contacts-social "> 
							<a href="<%="#{Setting.get(:host_url)}"%>/EMS/<%= link.html_safe%>&side=request" class="list-inline-item bg-linkedin btn-outline-primary border-1 meeting-link" >üîó</a>
							<br/> <span id="copy-success" style="display: none; color: green; margin-left: 10px;">Link copied!</span>
							
									</div>
							</div>
						</div>


					</div>
						
					</div>
				</div>
				</div>
			</div>
			
			
			
			
			
			</div>
			
		
			
			
			
		</div>
			
			
			<div class="card col-12 d-flex align-items-stretch">
			<!-- <img src="/stream" width="100%" > -->
			</div>
		
			
			<div class=" card col-12 message-partial d-flex align-items-stretch" id="" style="border:0px solid;height:500px;overflow:scroll">
			
			</div>
			
		
	</div>

<% end %>
</div>
    <script>



    publishVideo = true;
    publishAudio = true;


  


		window.onload = () => {


      getToken("<%=session_id%>").then(token => {



          var webComponent = document.querySelector('openvidu-webcomponent');
          webComponent.tokens = token ; //'wss://pcm-life.com:4443?sessionId=SessionA&token=tok_O4GO4gBKe2cX7M7K' ;
		  
		
		  
		  webComponent.addEventListener('onSessionCreated', (event) => {
		          var session = event.detail;
				  
				  function autoJoin() {
				    $('#join-button').click()
					getToken("<%=session_id%>")
				  }
			
		
				  setTimeout(autoJoin, 2000);
				  
		   });
		

      });


		}


    function toggleVideo() {
      this.publishVideo = !this.publishVideo;
      webComponent.publishVideo(this.publishVideo);
    }

    function toggleAudio() {
      this.publishAudio = !this.publishAudio;
      webComponent.publishAudio(this.publishAudio);
    }




	// getSession().then(function(re){
	//
	// 		console.log(re["content"])
	//
	// 	for(var ix in re["content"]){
	//
	// 		i = re["content"][ix]
	// 		id = i["id"]
	//
	// 		console.log(id)
	// 		num = i["connections"]["numberOfElements"]
	// 		console.log(num)
	//
	//
	// 		$("#"+id+" .meeting-participant").html(num)
	//
	// 		$("#"+id+" .meeting-tag").removeClass('btn-outline-secondary')
	//
	// 		$("#"+id+" .meeting-tag").addClass('btn-outline-primary')
	//
	//
	// 	}
	//
	// });



    		/**
    		 * --------------------------------------------
    		 * GETTING A TOKEN FROM YOUR APPLICATION SERVER
    		 * --------------------------------------------
    		 * The methods below request the creation of a Session and a Token to
    		 * your application server. This keeps your OpenVidu deployment secure.
    		 *
    		 * In this sample code, there is no user control at all. Anybody could
    		 * access your application server endpoints! In a real production
    		 * environment, your application server must identify the user to allow
    		 * access to the endpoints.
    		 *
    		 * Visit https://docs.openvidu.io/en/stable/application-server to learn
    		 * more about the integration of OpenVidu in your application server.
    		 */

    		var APPLICATION_SERVER_URL = '<%=Setting.get('videocall_server','https://openvidu.pcm-life.com')%>';
		
    		function getToken(sessionId) {

    			return new Promise((resolve, reject) => {
    			getSession(sessionId).then(function(re){
					
    				if(re=="404"){
    					resolve(createSession(sessionId).then(sessionId => createToken(sessionId)));
    				}else{

    					resolve(createToken(sessionId));
						
						updateSession(sessionId)
						
							// id = re["id"]
			//
			// 				console.log(id)
			// 				num = re["connections"]["numberOfElements"]
			// 				console.log(num)
			//
			//
			// 				$("#"+id+" .meeting-participant").html(num)
			//
			// 				$("#"+id+" .meeting-tag").removeClass('btn-outline-secondary')
			//
			// 				$("#"+id+" .meeting-tag").addClass('btn-outline-primary')
						
    				}

    			})

    			});



    		}

			function updateSession(sessionId){
    			getSession(sessionId).then(function(re){
					
    				
						
					id = re["id"]
					num = re["connections"]["numberOfElements"]
					$("#"+id+" .meeting-participant").html(num)

					$("#"+id+" .meeting-tag").removeClass('btn-outline-secondary')

					$("#"+id+" .meeting-tag").addClass('btn-outline-primary')

	
    			});
			}

    		function getSession(sessionId) {


    		return new Promise((resolve, reject) => {

    			$.ajax({
    				type: "GET",
    				url: APPLICATION_SERVER_URL + "/openvidu/api/sessions/"+sessionId,
    				beforeSend: function (xhr) {
    				    xhr.setRequestHeader ("Authorization", "Basic " + btoa("<%=Setting.get('videocall_password','OPENVIDUAPP:minadadmin')%>"));
    				},
    				headers: { "Content-Type": "application/json" },
    				success:  response => resolve(response),

    				error: function(error){
    					resolve(error.status)
    				}

    			});

    			});

    		}



    		function createSession(sessionId) {
    			return new Promise((resolve, reject) => {
    				$.ajax({
    					type: "POST",
    					url: APPLICATION_SERVER_URL + "/openvidu/api/sessions",
    					data: JSON.stringify({ customSessionId: sessionId }),
    					beforeSend: function (xhr) {
    					    xhr.setRequestHeader ("Authorization", "Basic " + btoa("<%=Setting.get('videocall_password','OPENVIDUAPP:minadadmin')%>"));
    					},
    					headers: { "Content-Type": "application/json" },
    					success: response => resolve(response.sessionId), // The sessionId
    					error: (error) => reject(error)
    				});
    			});
    		}

    		function createToken(sessionId) {
				
    			return new Promise((resolve, reject) => {
					
					username="ok"
					
    				$.ajax({
    					type: 'POST',
    					url: APPLICATION_SERVER_URL + '/openvidu/api/sessions/' + sessionId + '/connection',
						data: JSON.stringify({
		                    role: "PUBLISHER",
		                    data: `username=${username}`
						}),
    					beforeSend: function (xhr) {
    					    xhr.setRequestHeader ("Authorization", "Basic " + btoa("<%=Setting.get('videocall_password','')%>"));
    					},
    					headers: { "Content-Type": "application/json" },
    					success: (response) => resolve(response.token), // The token
    					error: (error) => reject(error)
    				});
    			});
    		}
			
			

			<% if emd and ems_case %>
			

			function reload_message(ems_id, admit_id){


			ems_case_id = ems_id

			message_admit_id = admit_id

			// alert(""+ems_id +" "+admit_id)

			$.ajax({
			  url: "<%= "../EMSParamedic/message_partial"%>?admit_id="+message_admit_id+"&di=reverse",
			  context: document.body
			}).done(function(data) {
				
			  $( '.message-partial' ).html(data);

			   // $('.element-tab').scrollTop(100000000)


				// update_message();
	//
	// 			if(text_mode==true){
	// 				update_text();
	// 			}


			});

			}
			<% if ems_case %>
			reload_message('<%=ems_case.id%>','<%=ems_case.admit.id%>')
			<% end %>
			
			<% end %>

				
			<%
			@current_zone  = nil

			@current_zone = Zone.find meeting.zone_id if meeting
			@current_zone = Zone.find record.zone_id if record


			
			
			%>
			
			function show(obj){
				console.log(obj)
			}


		    tag = 'wss://' + window.location.host + "/<%=@context.settings.name%>/Home/index";


		    var ws  = new WebSocket('wss://' + window.location.host + "/ws/<%=@context.settings.name%>/Home/index");


		    ws.onopen    = function()  { show('websocket opened');

		    	ws.send('WS.Select name=<%=session.id%>\n["Zone <%="miot/#{@context.settings.name}/z/#{@current_zone.name if @current_zone}"%>","ZoneUpdate zone_id=*","EMSUpdate event_id=*", "Alert station_id=*","Data.Image station_id=*"]')


		    };


		    ws.onclose   = function()  { show('websocket closed');

		   	setTimeout(function () {
		         // window.location.href = "index"; //will redirect to your blog page (an ex: blog.html)
		      }, 2000); //will call the function after 2 secs.


		    }

		    ws.onmessage = function(m) {


		  	  // console.log("package="+m.data.length)

		  	  // show(m.data)

		  		lines = m.data.split("\n")

		  		// console.log(lines[0].split(" ")[0])
		  		if(lines[0].split(" ")[0]=='Zone.Message'){
				  <% if ems_case %>
		  		  reload_message("<%=ems_case.id%>","<%=ems_case.admit.id%>")
				  <% end %>	
		  		}
		  		if( typeof process_message === 'function'){
		  			process_message(lines)
		  		}
	    


		    }

		  	var interval = null;
	





			// Select elements
			const copyButton = document.getElementById('copy-button');
			const videoCallLink = document.getElementById('video-call-link');
			const copySuccess = document.getElementById('copy-success');

			$(document).ready(function(){
				
				// Add click event listener to the button
				$(".meeting-link").click(function(e){
						
					e.preventDefault();
			
				    // Create a temporary input element to hold the link text
				    const tempInput = document.createElement('input');
		
		
				    tempInput.value = $(this).attr("href"); // Get the link's href
				    document.body.appendChild(tempInput); // Append to the body
				    tempInput.select(); // Select the text
				    document.execCommand('copy'); // Copy the text
				    document.body.removeChild(tempInput); // Remove the temporary input

				    // Show success message
				    copySuccess.style.display = 'inline';
				    setTimeout(() => {
				        copySuccess.style.display = 'none';
				    }, 2000); // Hide success message after 2 seconds
		
				
				});
	
			});
			
			

	
	
		</script>
		
	
	</body>

</html>
