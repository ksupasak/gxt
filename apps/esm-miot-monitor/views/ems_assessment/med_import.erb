<%



%>


<%

   #@document = get_document(this.document_name)

   #fields = @document.fields

   # fields.collect!{|i| i.column_name unless Document.visual_types.index(i.field_type) }.compact!
   # fields << 'created_at'
   # fields << 'updated_at'

   for m in this.model.where({:type=>'med'}).sort(:group=>1, :sort_order=>1).all

   	   m.destroy

   end
   #
   
   if !request.post?

%><pre>record_id    <%# fields.join("\t")%></pre>
<% else
require 'csv'

model = this.model

csv = CSV.parse(params[:file][:tempfile].read.bytes.pack("c*").force_encoding("UTF-8"), :headers => true)
list = nil
record_id = false
%>
<table>
<%
csv.each do |row|


	
 list = row.to_hash.keys  unless list
 
 
 tmp = {}
 puts 'xxx'
 puts row.inspect 
 
 
 list.each_with_index do |i,j|
    tmp[i] = row[j]
 end
 
  puts  tmp["group"]
  
  if  tmp["group"] and  tmp["group"]!=""
	  
 
	 
	  
	  
 med = model.where(:code=>tmp['code']).first
 

  
  
 m = {:group=>tmp['group'], :sort_order=>tmp['sort_order'], :code=>tmp['code'], :name=>tmp['name'], :type=>'med'}
 data = {}
 data[:med] = tmp['name']
 data[:unit] = tmp['unit'] #params[:unit][j]
 data[:consume] = tmp['consume'] #params[:consume][j]
 data[:volume] = tmp['volume'] #params[:volume][j]
 data[:volume_formula] = tmp['volume_formula'] #params[:volume_formula][j] if params[:volume_formula][j]!=""
 data[:routes] = tmp['routes'] #params[:routes][j]
 
 begin
 data[:dose] = JSON.parse(tmp['dose']) if tmp['dose']!=""
rescue Exception=>e

 end

 m[:data] = data.to_json

 puts m 
 
 
 # key :code, String
#
#  key :name, String
#
#  key :description, String
#
#  key :group, String
#
#  key :data, String
#
#  key :type, String
#
#  key :sort_order, Integer
#
#  key :zone_id, ObjectId
#
#  key :position, String
 
 
 if med
	 
	r =  med.update m
	
	r = med
	 
 else  
	 
 	r = model.create m
	 
 end
	 

 
 
%><tr><td><%= r.id %></td><td><%= r.id %></td></tr>
<%
 end
end
%>
<% unless record_id %>
<meta http-equiv="REFRESH" content="0;url=med">
<% end %>
<% end %>
